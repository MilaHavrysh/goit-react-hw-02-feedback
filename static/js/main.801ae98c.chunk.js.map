{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","statistics_option_list","statistics_option_list_item","statistics_option_item_date","Section","title","children","section","section_title","FeedbackOptions","options","onLeaveFeedback","feedbackOptions","map","element","feedbackOptions_button","type","onClick","Notification","message","notification","App","state","countFeedback","e","setState","prevState","target","textContent","countTotalFeedback","Object","values","reduce","acc","amount","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.801ae98c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics_option_list\":\"Statistics_statistics_option_list__3JFUL\",\"statistics_option_list_item\":\"Statistics_statistics_option_list_item__clTA8\",\"statistics_option_list_item_date\":\"Statistics_statistics_option_list_item_date__2SSHo\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={styles.statistics}>\r\n      <ul className={styles.statistics_option_list}>\r\n        <li className={styles.statistics_option_list_item}>\r\n          <p className={styles.statistics_option_item_date}>Good:{good}</p>\r\n        </li>\r\n        <li className={styles.statistics_option_list_item}>\r\n          <p className={styles.statistics_option_item_date}>\r\n            Neutral:{neutral}\r\n          </p>\r\n        </li>\r\n        <li className={styles.statistics_option_list_item}>\r\n          <p className={styles.statistics_option_item_date}>Bad:{bad}</p>\r\n        </li>\r\n        <li className={styles.statistics_option_list_item}>\r\n          <p className={styles.statistics_option_item_date}>Total:{total}</p>\r\n        </li>\r\n        <li className={styles.statistics_option_list_item}>\r\n          <p className={styles.statistics_option_item_date}>\r\n            Positive feedback:\r\n            {good > 0 ? positivePercentage : 0}%\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.section_title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.feedbackOptions}>\r\n    {options.map(element => (\r\n      <button\r\n        className={styles.feedbackOptions_button}\r\n        key={element}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {element}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.notification}>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes={\r\n    message:PropTypes.string.isRequired\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedback = e => {\n    this.setState(prevState => {\n      if (e.target.textContent === 'Good') {\n        return { good: prevState.good + 1 };\n      } else if (e.target.textContent === 'Neutral') {\n        return { neutral: prevState.neutral + 1 };\n      } else if (e.target.textContent === 'Bad') {\n        return { bad: prevState.bad + 1 };\n      }\n    });\n  };\n  countTotalFeedback = () => {\n    this.total = Object.values(this.state).reduce(\n      (acc, amount) => acc + amount,\n    );\n    return this.total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    this.positivePercentage = Math.round((this.state.good / this.total) * 100);\n    return this.positivePercentage;\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={['Good', 'Neutral', 'Bad']}\n            onLeaveFeedback={this.countFeedback}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message={'No feedback given'} />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1yzAa\",\"section_title\":\"Section_section_title__1_3x0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOptions\":\"FeedbackOptions_feedbackOptions__RMZR7\",\"feedbackOptions_button\":\"FeedbackOptions_feedbackOptions_button__qOpxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__23zYt\"};"],"sourceRoot":""}